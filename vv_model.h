#ifndef VV_MODEL_H_INCLUDED
#define VV_MODEL_H_INCLUDED

#include <string.h>		// memset
#include "vv_world.h"

/*
	vv_model - модуль работы с моделями
	Использует типы и функции vv_vox, vv_model_type, vv_world
*/

// = = = = Макросы = = = =
// nope

// = = = = Типы = = = =

// Структура модели движка volvox
typedef struct {
	// Позиция модели в мире
	uint16_t position_x;	// Координаты X и Y
	uint16_t position_y;
	uint16_t _position_h;	// Высота модели. Определяется высотой сегмента 0.
							// Внутренняя переменная, вручную изменять запрещено.

	// Размеры модели по осям X и Y
	uint16_t size_x;
	uint16_t size_y;

	// Высота модели - определяется максимальной высотой сегмента.
	uint16_t size_z;

	// Массив (матрица) ячеек модели
	cell_s *cell;
} model_s;

// = = = = Функции = = = =

#ifdef __cplusplus
extern "C" {
#endif

// Функция получения указателя на ячейку модели.
// Принимает указатель на модель и координаты X и Y
cell_s* vv_model_get_cell( model_s *, uint16_t, uint16_t );

// Функция получения количества ячеек модели.
// Принимает указатель на модель
uint16_t vv_model_get_cell_count( model_s * );

// Функция освобождения памяти, занятой моделью.
// Принимает указатель на модель.
void vv_model_free( model_s * );

// Функция установки высоты модели.
// Принимает указатель на модель и высоту модели.
// Возвращает признак успеха изменения высоты: true - успешно, false - высота модели слишком велика (будет установлена доступная)
bool vv_model_set_height( model_s *, uint16_t );

// Функция слияния модели с миром.
// Принимает указатель на модель, флаг перезаписи непрозрачных вокселей мира, флаг оптимизиации модели и режим слияния.
// Возвращает результат совмещения модели с миром: true - успешно, false - ошибка (нехватает сегментов)
bool vv_model_merge( model_s *, bool, bool, merge_mode_e );

// Функция создания модели куба.
// Принимает указатель на модель для создания, цвет и размер куба.
void vv_model_create_cube( model_s *, color_s, uint8_t );

#ifdef __cplusplus
}
#endif

#endif // VV_MODEL_H_INCLUDED
